{"version":3,"sources":["components/AddAppointments.js","components/SearchAppointments.js","components/ListAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AddAppointments","handleChange","e","target","value","name","setState","handleAdd","preventDefault","tempApt","petName","state","ownerName","aptDate","aptTime","aptNotes","props","addAppointments","toggleForm","className","this","formDisplay","onClick","id","noValidate","onSubmit","htmlFor","readOnly","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","change","orderDir","href","role","ListAppointments","appointments","map","item","key","aptId","deleteAppointment","contentEditable","suppressContentEditableWarning","onBlur","updateInfo","innerText","date","parse","format","App","query","queryText","changeOrder","order","dir","apt","tempApts","myAppointments","lastIndex","unshift","without","findIndex","fetch","then","response","json","result","apts","filteredApts","sort","a","b","toLowerCase","filter","eachItem","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6TA6KeA,E,kDAvKb,aAAe,IAAD,8BACZ,gBAYFC,aAAe,SAACC,GACd,IAAMC,EAASD,EAAEC,OACXC,EAAQD,EAAOC,MACfC,EAAOF,EAAOE,KAEpB,EAAKC,SAAL,eACGD,EAAOD,KAnBE,EAuBdG,UAAY,SAACL,GACXA,EAAEM,iBACF,IAAIC,EAAU,CACZC,QAAS,EAAKC,MAAMD,QACpBE,UAAW,EAAKD,MAAMC,UACtBC,QAAS,EAAKF,MAAME,QAAU,IAAM,EAAKF,MAAMG,QAC/CC,SAAU,EAAKJ,MAAMI,UAGvB,EAAKC,MAAMC,gBAAgBR,GAE3B,EAAKH,SAAS,CACZI,QAAS,GACTE,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,KAGZ,EAAKC,MAAME,cAxCX,EAAKP,MAAQ,CACXD,QAAS,GACTE,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,SAAU,IAPA,E,qDA8CZ,OACE,yBAAKI,UACH,yBACCC,KAAKJ,MAAMK,YAAc,GAAK,oBAEjC,yBAAKF,UAAU,mDACbG,QAASF,KAAKJ,MAAME,YAEpB,kBAAC,IAAD,MAHF,mBAMA,yBAAKC,UAAU,aACb,0BAAMI,GAAG,UAAUC,YAAU,EAACC,SAAUL,KAAKb,WAC3C,yBAAKY,UAAU,uBACb,2BACEA,UAAU,wCACVO,QAAQ,UACRC,UAAQ,GAHV,YAOA,yBAAKR,UAAU,aACb,2BACES,KAAK,OACLT,UAAU,eACVd,KAAK,UACLwB,YAAY,aACZzB,MAAOgB,KAAKT,MAAMD,QAClBoB,SAAUV,KAAKnB,iBAKrB,yBAAKkB,UAAU,uBACb,2BACEA,UAAU,wCACVO,QAAQ,aAFV,aAMA,yBAAKP,UAAU,aACb,2BACES,KAAK,OACLT,UAAU,eACVd,KAAK,YACLwB,YAAY,eACZzB,MAAOgB,KAAKT,MAAMC,UAClBkB,SAAUV,KAAKnB,iBAKrB,yBAAKkB,UAAU,uBACb,2BACEA,UAAU,wCACVO,QAAQ,WAFV,QAMA,yBAAKP,UAAU,YACb,2BACES,KAAK,OACLT,UAAU,eACVd,KAAK,UACLkB,GAAG,UACHnB,MAAOgB,KAAKT,MAAME,QAClBiB,SAAUV,KAAKnB,gBAGnB,2BACEkB,UAAU,wCACVO,QAAQ,WAFV,QAMA,yBAAKP,UAAU,YACb,2BACES,KAAK,OACLT,UAAU,eACVd,KAAK,UACLkB,GAAG,UACHnB,MAAOgB,KAAKT,MAAMG,QAClBgB,SAAUV,KAAKnB,iBAKrB,yBAAKkB,UAAU,uBACb,2BAAOA,UAAU,yBAAyBO,QAAQ,YAAlD,cAGA,yBAAKP,UAAU,aACb,8BACEA,UAAU,eACVY,KAAK,IACLC,KAAK,KACL3B,KAAK,WACLkB,GAAG,WACHM,YAAY,oBACZzB,MAAOgB,KAAKT,MAAMI,SAClBe,SAAUV,KAAKnB,iBAKrB,yBAAKkB,UAAU,4BACb,yBAAKA,UAAU,yBACb,4BACES,KAAK,SACLT,UAAU,mCAFZ,4B,GA3JgBc,aCyEfC,E,uKAzEH,IAAD,OACP,OACE,yBAAKf,UAAU,uDACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,eACb,2BACEI,GAAG,aACHK,KAAK,OACLT,UAAU,eACVgB,aAAW,sBACXL,SAAU,SAAA5B,GAAC,OAAI,EAAKc,MAAMoB,WAAWlC,EAAEC,OAAOC,UAEhD,yBAAKe,UAAU,sBACb,4BACES,KAAK,SACLT,UAAU,kCACVkB,cAAY,WACZC,gBAAc,OACdC,gBAAc,SALhB,YAOW,0BAAMpB,UAAU,WAG3B,yBAAKA,UAAU,+CACb,4BAAQA,UACN,0BACwB,YAAvBC,KAAKJ,MAAMwB,QAAwB,SAAW,IAE/ClB,QAAS,SAAApB,GAAC,OAAI,EAAKc,MAAMyB,OAAO,UAAW,EAAKzB,MAAM0B,WACtDC,KAAK,KALP,YAQA,4BAAQxB,UACN,0BACwB,YAAvBC,KAAKJ,MAAMwB,QAAwB,SAAW,IAE/ClB,QAAS,SAAApB,GAAC,OAAI,EAAKc,MAAMyB,OAAO,UAAW,EAAKzB,MAAM0B,WACtDC,KAAK,KALP,QAQA,4BAAQxB,UACN,0BACwB,cAAvBC,KAAKJ,MAAMwB,QAA0B,SAAW,IAEjDlB,QAAS,SAAApB,GAAC,OAAI,EAAKc,MAAMyB,OAAO,YAAa,EAAKzB,MAAM0B,WACxDC,KAAK,KALP,SAQA,yBAAKC,KAAK,YAAYzB,UAAU,qBAChC,4BAAQA,UACN,0BACyB,QAAxBC,KAAKJ,MAAM0B,SAAqB,SAAW,IAE5CpB,QAAS,SAAApB,GAAC,OAAI,EAAKc,MAAMyB,OAAO,EAAKzB,MAAMwB,QAAS,QACpDG,KAAK,KALP,OAQA,4BAAQxB,UACN,0BACyB,SAAxBC,KAAKJ,MAAM0B,SAAsB,SAAW,IAE7CpB,QAAS,SAAApB,GAAC,OAAI,EAAKc,MAAMyB,OAAO,EAAKzB,MAAMwB,QAAS,SACpDG,KAAK,KALP,iB,GA3DiBV,a,iBCgElBY,E,uKA3DH,IAAD,OAEP,OACE,yBAAK1B,UAAU,mCACZC,KAAKJ,MAAM8B,aAAaC,KAAI,SAAAC,GAAI,OAC/B,yBAAK7B,UAAU,0BAA0B8B,IAAKD,EAAKE,OACjD,yBAAK/B,UAAU,QACb,4BAAQA,UAAU,mCAChBG,QAAS,kBAAM,EAAKN,MAAMmC,kBAAkBH,KAC5C,kBAAC,IAAD,QAIJ,yBAAK7B,UAAU,uBACb,yBAAKA,UAAU,mBACb,0BACEA,UAAU,WACViC,iBAAe,EACfC,gCAA8B,EAC9BC,OACE,SAAApD,GAAC,OAAI,EAAKc,MAAMuC,WAAW,UAAWrD,EAAEC,OAAOqD,UAAWR,EAAKE,SAEjEF,EAAKtC,SACP,0BAAMS,UAAU,oBACd,kBAAC,IAAD,CACEsC,KAAMT,EAAKnC,QACX6C,MAAM,mBACNC,OAAQ,kBAKd,yBAAKxC,UAAU,cACb,0BACEA,UAAU,aACViC,iBAAe,EACfC,gCAA8B,EAC9BC,OACE,SAAApD,GAAC,OAAI,EAAKc,MAAMuC,WAAW,YAAarD,EAAEC,OAAOqD,UAAWR,EAAKE,SALrE,WAQA,8BAAOF,EAAKpC,YAEd,yBACEO,UAAU,YACViC,iBAAe,EACfC,gCAA8B,EAC9BC,OACE,SAAApD,GAAC,OAAI,EAAKc,MAAMuC,WAAW,WAAYrD,EAAEC,OAAOqD,UAAWR,EAAKE,SAElEF,EAAKjC,oB,GApDUkB,a,OCoJhB2B,E,kDA9Ib,aAAe,IAAD,8BACZ,gBAWFxB,WAAa,SAACyB,GACZ,EAAKvD,SAAS,CACZwD,UAAWD,KAdD,EAkBdE,YAAc,SAACC,EAAOC,GACpB,EAAK3D,SAAS,CACZkC,QAASwB,EACTtB,SAAUuB,KArBA,EAyBdhD,gBAAkB,SAACiD,GACjB,IAAIC,EAAW,EAAKxD,MAAMyD,eAC1BF,EAAIhB,MAAQ,EAAKvC,MAAM0D,UACvBF,EAASG,QAAQJ,GACjB,EAAK5D,SAAS,CACZ8D,eAAgBD,EAChBE,UAAW,EAAK1D,MAAM0D,UAAY,KA/BxB,EAmCdlB,kBAAoB,SAACe,GACnB,IAAIC,EAAW,EAAKxD,MAAMyD,eAC1BD,EAAWI,kBAAQJ,EAAUD,GAE7B,EAAK5D,SAAS,CACZ8D,eAAgBD,KAxCN,EA4CdZ,WAAa,SAAClD,EAAMD,EAAOmB,GACzB,IAAI4C,EAAW,EAAKxD,MAAMyD,eAI1BD,EAHeK,oBAAU,EAAK7D,MAAMyD,eAAgB,CAClDlB,MAAO3B,KAEUlB,GAAQD,EAC3B,EAAKE,SAAS,CACZ8D,eAAgBD,KAnDN,EA0EdjD,WAAa,WACX,EAAKZ,SAAS,CACZe,aAAc,EAAKV,MAAMU,eA1E3B,EAAKV,MAAQ,CACXyD,eAAgB,GAChB/C,aAAa,EACbmB,QAAS,UACTE,SAAU,MACVoB,UAAW,GACXO,UAAW,GARD,E,gEAuDO,IAAD,OAElBI,MAAM,eACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAMC,EAAOD,EAAO9B,KAAI,SAAAC,GAKtB,OAJAA,EAAKE,MAAQ,EAAKvC,MAAM0D,UACxB,EAAK/D,SAAS,CACZ+D,UAAW,EAAK1D,MAAM0D,UAAY,IAE7BrB,KAGT,EAAK1C,SAAS,CACZ8D,eAAgBU,S,+BAWd,IAEJd,EAFG,OAGHe,EAAe3D,KAAKT,MAAMyD,eA2B9B,OAzBEJ,EAD0B,QAAxB5C,KAAKT,MAAM+B,SACL,GAEC,EAGXqC,EAAeA,EAAaC,MAAK,SAACC,EAAEC,GAClC,OAAID,EAAE,EAAKtE,MAAM6B,SAAS2C,cAAgBD,EAAE,EAAKvE,MAAM6B,SAAS2C,eACtD,EAAInB,EAEL,EAAIA,KAEZoB,QAAO,SAAAC,GACR,OACEA,EAAQ,QACPF,cACAG,SAAS,EAAK3E,MAAMmD,UAAUqB,gBAC/BE,EAAQ,UACPF,cACAG,SAAS,EAAK3E,MAAMmD,UAAUqB,gBAC/BE,EAAQ,SACPF,cACAG,SAAS,EAAK3E,MAAMmD,UAAUqB,kBAKjC,0BAAMhE,UAAW,gBAAgBI,GAAG,cAClC,yBAAKJ,UAAW,aACd,yBAAKA,UAAW,OACd,yBAAKA,UAAW,sBACd,yBAAKA,UAAW,aACd,kBAAC,EAAD,CACEE,YAAaD,KAAKT,MAAMU,YACxBH,WAAYE,KAAKF,WACjBD,gBAAiBG,KAAKH,kBAExB,kBAAC,EAAD,CACEuB,QAAWpB,KAAKT,MAAM6B,QACtBE,SAAYtB,KAAKT,MAAM+B,SACvBD,OAAQrB,KAAK2C,YACb3B,WAAYhB,KAAKgB,aAEnB,kBAAC,EAAD,CACEU,aAAciC,EACd5B,kBAAmB/B,KAAK+B,kBACxBI,WAAYnC,KAAKmC,sB,GApIjBtB,aCGEsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzB,MAAK,SAAA0B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6e2eba0f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { FaPlus } from \"react-icons/fa\";\r\n\r\nclass AddAppointments extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      petName: '',\r\n      ownerName: '',\r\n      aptDate: '',\r\n      aptTime: '',\r\n      aptNotes: ''\r\n    };\r\n    // this.handleChange = this.handleChange.bind(this);\r\n    // this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleAdd = (e) => {\r\n    e.preventDefault();\r\n    let tempApt = {\r\n      petName: this.state.petName,\r\n      ownerName: this.state.ownerName,\r\n      aptDate: this.state.aptDate + ' ' + this.state.aptTime,\r\n      aptNotes: this.state.aptNotes,\r\n    }\r\n\r\n    this.props.addAppointments(tempApt);\r\n\r\n    this.setState({\r\n      petName: '',\r\n      ownerName: '',\r\n      aptDate: '',\r\n      aptTime: '',\r\n      aptNotes: '',\r\n    });\r\n\r\n    this.props.toggleForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\r\n        'card textcenter mt-3 ' +\r\n        (this.props.formDisplay ? '' : 'add-appointment')\r\n      }>\r\n      <div className=\"apt-addheading card-header bg-primary text-white\"\r\n        onClick={this.props.toggleForm}\r\n      >\r\n        <FaPlus />Add Appointment\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n          <div className=\"form-group form-row\">\r\n            <label\r\n              className=\"col-md-2 col-form-label text-md-right\"\r\n              htmlFor=\"petName\"\r\n              readOnly\r\n            >\r\n              Pet Name\r\n            </label>\r\n            <div className=\"col-md-10\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"petName\"\r\n                placeholder=\"Pet's Name\"\r\n                value={this.state.petName}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group form-row\">\r\n            <label\r\n              className=\"col-md-2 col-form-label text-md-right\"\r\n              htmlFor=\"ownerName\"\r\n            >\r\n              Pet Owner\r\n            </label>\r\n            <div className=\"col-md-10\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"ownerName\"\r\n                placeholder=\"Owner's Name\"\r\n                value={this.state.ownerName}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group form-row\">\r\n            <label\r\n              className=\"col-md-2 col-form-label text-md-right\"\r\n              htmlFor=\"aptDate\"\r\n            >\r\n              Date\r\n            </label>\r\n            <div className=\"col-md-4\">\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                name=\"aptDate\"\r\n                id=\"aptDate\"\r\n                value={this.state.aptDate}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <label\r\n              className=\"col-md-2 col-form-label text-md-right\"\r\n              htmlFor=\"aptTime\"\r\n            >\r\n              Time\r\n            </label>\r\n            <div className=\"col-md-4\">\r\n              <input\r\n                type=\"time\"\r\n                className=\"form-control\"\r\n                name=\"aptTime\"\r\n                id=\"aptTime\"\r\n                value={this.state.aptTime}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group form-row\">\r\n            <label className=\"col-md-2 text-md-right\" htmlFor=\"aptNotes\">\r\n              Apt. Notes\r\n            </label>\r\n            <div className=\"col-md-10\">\r\n              <textarea\r\n                className=\"form-control\"\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n                name=\"aptNotes\"\r\n                id=\"aptNotes\"\r\n                placeholder=\"Appointment Notes\"\r\n                value={this.state.aptNotes}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-group form-row mb-0\">\r\n            <div className=\"offset-md-2 col-md-10\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary d-block ml-auto\"\r\n              >\r\n                Add Appointment\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>    );\r\n  }\r\n}\r\n\r\nexport default AddAppointments;","import React, { Component } from \"react\";\r\n\r\nclass SearchAppointments extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-appointments row justify-content-center my-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              id=\"SearchApts\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Search Appointments\"\r\n              onChange={e => this.props.searchApts(e.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by: <span className=\"caret\" />\r\n              </button>\r\n\r\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={\r\n                  'sort-by dropdown-item ' +\r\n                  (this.props.orderBy === 'petName' ? 'active' : '')\r\n                  } \r\n                  onClick={e => this.props.change('petName', this.props.orderDir)} \r\n                  href=\"#\">\r\n                  Pet Name\r\n                </button>\r\n                <button className={\r\n                  'sort-by dropdown-item ' +\r\n                  (this.props.orderBy === 'aptDate' ? 'active' : '')                  \r\n                  }\r\n                  onClick={e => this.props.change('aptDate', this.props.orderDir)} \r\n                  href=\"#\">\r\n                  Date\r\n                </button>\r\n                <button className={\r\n                  'sort-by dropdown-item ' +\r\n                  (this.props.orderBy === 'ownerName' ? 'active' : '')                  \r\n                  } \r\n                  onClick={e => this.props.change('ownerName', this.props.orderDir)} \r\n                  href=\"#\">\r\n                  Owner\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={\r\n                  'sort-by dropdown-item ' +\r\n                  (this.props.orderDir === 'asc' ? 'active' : '')                  \r\n                  } \r\n                  onClick={e => this.props.change(this.props.orderBy, 'asc')} \r\n                  href=\"#\">\r\n                  Asc\r\n                </button>\r\n                <button className={\r\n                  'sort-by dropdown-item ' +\r\n                  (this.props.orderDir === 'desc' ? 'active' : '')                  \r\n                  } \r\n                  onClick={e => this.props.change(this.props.orderBy, 'desc')} \r\n                  href=\"#\">\r\n                  Desc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>    );\r\n  }\r\n}\r\n\r\nexport default SearchAppointments;","import React, { Component } from \"react\";\r\n\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport Moment from \"react-moment\";\r\n\r\nclass ListAppointments extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"appointment-list item-list mb-3\">\r\n        {this.props.appointments.map(item => (\r\n          <div className=\"pet-item col media py-3\" key={item.aptId} >\r\n            <div className=\"mr-3\">\r\n              <button className=\"pet-delete btn btn-sm btn-danger\"\r\n                onClick={() => this.props.deleteAppointment(item)} >\r\n                <FaTimes />\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"pet-info media-body\">\r\n              <div className=\"pet-head d-flex\">\r\n                <span \r\n                  className=\"pet-name\"\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={\r\n                    e => this.props.updateInfo('petName', e.target.innerText, item.aptId)\r\n                  }\r\n                >{item.petName}</span>\r\n                <span className=\"apt-date ml-auto\">\r\n                  <Moment \r\n                    date={item.aptDate}\r\n                    parse=\"YYYY-MM-dd hh:mm\"\r\n                    format= \"MMM-D h:mma\"\r\n                  />\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"owner-name\">\r\n                <span \r\n                  className=\"label-item\"\r\n                  contentEditable\r\n                  suppressContentEditableWarning\r\n                  onBlur={\r\n                    e => this.props.updateInfo('ownerName', e.target.innerText, item.aptId)\r\n                  }                  \r\n                >Owner: </span>\r\n                <span>{item.ownerName}</span>\r\n              </div>\r\n              <div \r\n                className=\"apt-notes\"\r\n                contentEditable\r\n                suppressContentEditableWarning\r\n                onBlur={\r\n                  e => this.props.updateInfo('aptNotes', e.target.innerText, item.aptId)\r\n                }              \r\n              >{item.aptNotes}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\nexport default ListAppointments;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport AddAppointments from \"./AddAppointments\";\nimport SearchAppointments from \"./SearchAppointments\";\nimport ListAppointments from \"./ListAppointments\";\n\nimport { findIndex, without } from \"lodash\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      queryText: '',\n      lastIndex: 0,\n    };\n  }\n\n  searchApts = (query) => {\n    this.setState({\n      queryText: query,\n    });\n  }\n\n  changeOrder = (order, dir) => {\n    this.setState({\n      orderBy: order,\n      orderDir: dir,\n    });\n  }\n\n  addAppointments = (apt) => {\n    let tempApts = this.state.myAppointments;\n    apt.aptId = this.state.lastIndex;\n    tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts,\n      lastIndex: this.state.lastIndex + 1,\n    });\n  }\n\n  deleteAppointment = (apt) => {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts,\n    })\n  }\n\n  updateInfo = (name, value, id) => {\n    let tempApts = this.state.myAppointments;\n    let aptIndex = findIndex(this.state.myAppointments, {\n      aptId: id,\n    });\n    tempApts[aptIndex][name] = value;\n    this.setState({\n      myAppointments: tempApts,\n    });\n  }\n\n  componentDidMount() {\n\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const apts = result.map(item => {\n          item.aptId = this.state.lastIndex;\n          this.setState({\n            lastIndex: this.state.lastIndex + 1,\n          });\n          return item;\n        });\n\n        this.setState({\n          myAppointments: apts,\n        });\n      });\n  }\n\n  toggleForm = () => {\n    this.setState({\n      formDisplay: !this.state.formDisplay,\n    });\n  }\n\n  render() {\n\n    let order;\n    let filteredApts = this.state.myAppointments;\n    if (this.state.orderDir === 'asc') {\n      order = 1;\n    } else {\n      order = -1;\n    }\n\n    filteredApts = filteredApts.sort((a,b) => {\n      if (a[this.state.orderBy].toLowerCase() < b[this.state.orderBy].toLowerCase()) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    }).filter(eachItem => {\n      return(\n        eachItem['petName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['ownerName']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase()) ||\n        eachItem['aptNotes']\n        .toLowerCase()\n        .includes(this.state.queryText.toLowerCase())\n      );\n    });\n\n    return (\n      <main className =\"page bg-white\" id=\"petratings\">\n        <div className =\"container\">\n          <div className =\"row\">\n            <div className =\"col-md-12 bg-white\">\n              <div className =\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay} \n                  toggleForm={this.toggleForm} \n                  addAppointments={this.addAppointments}\n                />\n                <SearchAppointments \n                  orderBy = {this.state.orderBy}\n                  orderDir = {this.state.orderDir}\n                  change={this.changeOrder}\n                  searchApts={this.searchApts}\n                />\n                <ListAppointments \n                  appointments={filteredApts}\n                  deleteAppointment={this.deleteAppointment}\n                  updateInfo={this.updateInfo}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n    \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './css/index.css';\nimport \"jquery/dist/jquery.js\";\nimport \"popper.js/dist/umd/popper.js\";\nimport \"bootstrap/dist/js/bootstrap.js\";\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}